@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    <style>
        .video-wrapper {
            position: relative;
            padding-bottom: 56.25%; /* 16:9 */
            padding-top: 25px;
        }

            .video-wrapper iframe {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
            }
    </style>

    <!DOCTYPE html>
    <html>
    <body>
        <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
        <div class="video-wrapper">
            <div id="player"></div>
        </div>
    </body>
</html>

<script>
    //YOUTUBE API INSTANTIATION START
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    var player;

    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: 'M7lc1UVf-VE',
            playerVars: {
                autoplay: 1,
                rel: 0,
                modestbranding: 1,
                disablekb: 1,
                controls: 0,
                fs: 0,
            },
            events: {
                'onReady': youtubeInterface.onPlayerReady,
                'onStateChange': youtubeInterface.onPlayerStateChange
            }
        })
    };
    //YOUTUBE API INSTANTIATION END

    var youtubeInterface = {
        onPlayerReady(event) {
            event.target.playVideo();
        },

        //MBY HAVE A STATE CHANGE TO MAKE SURE PEOPLE ARE ON THE SAME STATE?
        onPlayerStateChange(event) {

        },

        stopVideo() {
            player.stopVideo();
        },

        pausePlay() {
            if (player.getPlayerState() == 1) {
                player.pauseVideo();
            }
            else {
                player.playVideo();
            }
        },

        muteUnmute() {
            if (player.isMuted() == 1) {
                player.unMute();
            }
            else {
                player.mute();
            }
        },

        setVolume(volume) {
            player.setVolume(volume)
        },

        getVolume() {
            return player.getVolume();
        },

        getDuration() {
            return player.getDuration()
        },

        getCurrentTime() {
            return player.getCurrentTime()
        },

        loadVideo(videoId, startSeconds) {
            player.loadVideoById({
                videoId: videoId,
                startSeconds: startSeconds
            })
        },


    }
</script>
}
