@model AddPlaylistViewModel
@{
    ViewBag.Title = "AddPlaylist";
}

<div>
    <h2>
        Add New Playlist
    </h2>
</div>

<div>
    <!-- This div is essential. Otherwise it doesn't work lmao-->
    @using (@Html.BeginForm())
    {
        @Html.ValidationSummary();
        @Html.TextBoxFor(model => Model.PlaylistModel.Name, new { @class = "form-control", placeholder = " Playlist name" });
        <button class="btn btn-success" type="submit">Create Playlist</button>

        @for (int i = 0; i < (Model.PlaylistModel.Tracks?.Any() ?? true ? Model.PlaylistModel.Tracks.Count : 0); i++)
        {
            <div id="trackslist_@i">
                @Html.EditorFor(model => Model.PlaylistModel.Tracks[i])
                <!-- This is an editor template, not a partial view-->
            </div>

            <!-- TODO It doesn't send the cloned model back through form submit :( -->
        }
        <button class="btn btn-success" type="button" onclick="createItemFromTemplate('trackslist__x0x_', 0, 'trackslist_0')">Add New Track</button>
    }
</div>

<div hidden>
    <!-- A template of new (empty) track elements that I copy from, whenever a user adds one-->
    @{ var templateModel = new Soundche.Core.Domain.Track(); } 
    <div id="trackslist__x0x_">
        @Html.EditorFor(model => templateModel)
    </div>
</div>

<!-- TODO Still need delete and switch index functionality for each track element -->

<!-- TODO: Search on: MVC Edit a variable length list view !!!!!!!!!!! Maybe I should just do post/get and have each Track be a partial view?s -->
<!-- TODO: Need some JS to change the view whenever I add/remove a song... BELOW -->
<!-- TODO: All of it needs to be repackaged for a partial view at some point. -->
<!-- http://ivanz.com/2011/06/16/editing-variable-length-reorderable-collections-in-asp-net-mvc-part-1/ -->
<!-- http://blog.stevensanderson.com/2010/01/28/editing-a-variable-length-list-aspnet-mvc-2-style/ -->


<!-- TODO ADD THIS, AND THEN MAKE SURE VIDEOS CAN STILL BE PLAYED-->
<script type="text/javascript">
    function getYoutubeIdFromUrl(url) {
        let re = /^(https?:\/\/)?((www\.)?(youtube(-nocookie)?|youtube.googleapis)\.com.*(v\/|v=|vi=|vi\/|e\/|embed\/|user\/.*\/u\/\d+\/)|youtu\.be\/)([_0-9a-z-]+)/i;
        return url.match(re)[7];
        // Source: https://stackoverflow.com/a/51870158/5774018
        // Regex to get the youtube id from most kinds of youtube links
    }

    function createItemFromTemplate(templateId, indexNo, insertBeforeId) {
        // Copy the template Element, replaces all the _x0x_ with the index no and add the new element
        $('#' + insertBeforeId).before($.parseHTML($('#' + templateId).clone().prop('outerHTML').replace(/_x0x_/g, indexNo)));
    }
</script>
